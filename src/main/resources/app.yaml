spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_HOST:http://localhost:8080}/auth/realms/LCPRealm
          jwk-set-uri: ${KEYCLOAK_HOST:http://localhost:8080}/auth/realms/LCPRealm/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            authorization-grant-type: client_credentials
            client-id: ${CLIENT_ID:lenovo-client}
            client-secret: ${CLIENT_SECRET:}
        provider:
          keycloak:
            token-uri: ${KEYCLOAK_HOST:http://localhost:8080}/auth/realms/LCPRealm/protocol/openid-connect/token

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        acks: all
        retries: 10
        retry.backoff.ms: 1000
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: lenovo-group
      properties:
        spring.json.trusted.packages: "*"

swagger:
  oauth:
    authorization-endpoint: ${KEYCLOAK_HOST:http://localhost:8080}/auth/realms/${KEYCLOAK_REALM:LCPRealm}/protocol/openid-connect/auth
    token-endpoint: ${KEYCLOAK_HOST:http://localhost:8080}/auth/realms/${KEYCLOAK_REALM:LCPRealm}/protocol/openid-connect/token

springdoc:
  swagger-ui:
    url: /v3/api-docs
    path: /swagger-ui.html
    show-common-extensions: true
    oauth:
      client-id: swagger-client
      client-secret: swagger-secret
      realm: LCPRealm

application.web-security-config:
  csrf-ignoring-url: /swagger-ui.html, /swagger-ui/**, /v3/api-docs/**
  custom-unsecured-endpoints:
  common-unsecured-endpoints: /v2/api-docs, /configuration/ui, /swagger-resources/**, /configuration/security, /swagger-ui.html, /webjars/**, /swagger-ui/**, /v3/api-docs/**

security:
  oauth2:
    providers:
      keycloak:
        base-uri: ${KEYCLOAK_HOST:http://localhost:8080}
        issuer-path: /auth/realms/{realm}

minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:testadmin}
  secret-key: ${MINIO_SECRET_KEY:testadmin}
  region: ${MINIO_REGION:us-west-2}
  bucketName: ${MINIO_BUCKET_NAME:ming}
  rootDirectory: ${MINIO_CURRENT_DIRECTORY:}
  expiryTime: ${MINIO_PRESIGNED_URL_EXPIRY_TIME:1800} # 30 minutes
  minPartSize: ${MINIO_MIN_UPLOAD_PART_SIZE:20971520} # 20MiB
